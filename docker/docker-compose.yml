version: "3.4"

x-app: &default-apo
  restart: unless-stopped
  logging:
    driver: json-file
    options:
      max-file: ${DOCKERLOGGING_MAXFILE}
      max-size: ${DOCKERLOGGING_MAXSIZE}
  labels:
    - org.hotio.pullio.update=${PULLIO_UPDATE}
    - org.hotio.pullio.notify=${PULLIO_NOTIFY}
    - org.hotio.pullio.discord.webhook=${PULLIO_DISCORD_WEBHOOK}
  environment:
    - PUID=${PUID}
    - PGID=${PGID}
    - TZ=${TZ}
    - UMASK=002

services:
  radarr:
    <<: *default-app
    container_name: radarr
    image: cr.hotio.dev/hotio/radarr:latest
    ports:
      - 7878:7878
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/radarr:/config
      - ${DOCKERSTORAGEDIR}:/data

  sonarr:
    <<: *default-app
    container_name: sonarr
    image: cr.hotio.dev/hotio/sonarr:v4
    ports:
      - 8989:8989
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/sonarr:/config
      - ${DOCKERSTORAGEDIR}:/data

  bazarr:
    <<: *default-app
    container_name: bazarr
    image: cr.hotio.dev/hotio/bazarr:nightly
    ports:
      - 6767:6767
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/bazarr:/config
      - ${DOCKERSTORAGEDIR}/media:/data/media

  lidarr:
    <<: *default-app
    container_name: lidarr
    image: lscr.io/linuxserver/lidarr:develop
    restart: unless-stopped
    ports:
      - 8686:8686
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/lidarr/config:/config
      # - ${DOCKERCONFDIR}/lidarr/custom-services.d:/custom-services.d
      # - ${DOCKERCONFDIR}/lidarr/custom-cont-init.d:/custom-cont-init.d
      - ${DOCKERSTORAGEDIR}:/data

  gluetun:
    <<: *default-app
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      #- 8888:8888/tcp # HTTP proxy
      #- 8388:8388/tcp # Shadowsocks
      #- 8388:8388/udp # Shadowsocks
      - ${QBITTORRENT_WEBUI_PORT}:${QBITTORRENT_WEBUI_PORT} # port for qbittorrent
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/gluetun:/gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=022
      - TZ=${TZ}
      - VPN_SERVICE_PROVIDER=private internet access
      - VPN_TYPE=openvpn
      - OPENVPN_USER=${PIA_USER}
      - OPENVPN_PASSWORD=${PIA_PASS}
      #- SERVER_REGIONS=VPNSERVERCOUNTRY
      - HTTPPROXY=off #change to on if you wish to enable
      - SHADOWSOCKS=off #change to on if you wish to enable
      - FIREWALL_OUTBOUND_SUBNETS=${LAN_NETWORK} #change this in line with your subnet see note on guide.
#      - FIREWALL_VPN_INPUT_PORTS=12345 #uncomment this line and change the port as per the note on the guide
    labels:
      - com.centurylinklabs.watchtower.enable=false
    restart: unless-stopped

  qbittorrent:
    <<: *default-app
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=022
      - TZ=${TZ}
      - WEBUI_PORT=${QBITTORRENT_WEBUI_PORT}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/qbittorrent:/config
      - ${DOCKERSTORAGEDIR}/torrents:/data/torrents
    network_mode: service:gluetun # run on the vpn network
    depends_on:
      - gluetun
    restart: unless-stopped

  prowlarr:
    <<: *default-app
    container_name: prowlarr
    image: cr.hotio.dev/hotio/prowlarr:testing
    ports:
      - 9696:9696
    volumes:
      - ${DOCKERCONFDIR}/prowlarr:/config:rw
      
  picard:
    <<: *default-app
    container_name: picard
    image: mikenye/picard
    ports:
      - 5800:5800
    environment:
      - USER_ID=${PUID}
      - GROUP_ID=${PGID}
      - TZ=${TZ}
      - UMASK=002
      - KEEP_APP_RUNNING=1
      - ENABLE_CJK_FONT=1
    volumes:
      - ${DOCKERCONFDIR}/picard:/config:rw
      - ${DOCKERSTORAGEDIR}:/storage:rw
    restart: always

  slskd:
    <<: *default-app
    image: slskd/slskd
    container_name: slskd
    ports:
      - 5030:5030
      - 5031:5031
      - 50300:50300
    environment:
      - SLSKD_REMOTE_CONFIGURATION=true
      - SLSKD_SHARED_DIR=/data/media/music
    volumes:
      - ${DOCKERCONFDIR}/slskd:/app
      - ${DOCKERSTORAGEDIR}:/data
    restart: always

  tautulli:
    <<: *default-app
    container_name: tautulli
    image: cr.hotio.dev/hotio/tautulli
    ports:
      - 8181:8181
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
      - ARGS=
      - DEBUG=no
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/tautulli:/config:rw

  dozzle:
    <<: *default-app
    container_name: dozzle
    image: amir20/dozzle
    ports:
      - 9999:8080
    environment:
      - DOZZLE_BASE=/
      - DOZZLE_LEVEL=info
      - DOZZLE_TAILSIZE=300
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock

  unpackerr:
    <<: *default-app
    container_name: unpackerr
    image: cr.hotio.dev/hotio/unpackerr:release
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=${UMASK}
      - TZ=${TZ}
    volumes:
      - ${DOCKERCONFDIR}/unpackerr:/config
      - ${DOCKERSTORAGEDIR}:/data
    security_opt:
      - no-new-privileges:true

  plex:
    <<: *default-app
    container_name: plex
    image: cr.hotio.dev/hotio/plex
    ports:
      - 32400:32400
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
      - ARGS=
      - PLEX_CLAIM=${PLEX_CLAIM}
      - ADVERTISE_IP=${PLEX_ADVERTISE_IP}
      - ALLOWED_NETWORKS=
      - PLEX_PASS=${PLEX_PASS}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKERCONFDIR}/plex:/config:rw
      - ${DOCKERSTORAGEDIR}/media:/data/media:rw
#    devices:                                        # optional: if you have a Syno with an Intel CPU with quicksync and want hardware transcoding (only with Plex Pass) uncomment this line.
#      - /dev/dri:/dev/dri                           # optional: if you have a Syno with an Intel CPU with quicksync and want hardware transcoding (only with Plex Pass) uncomment this line.
#    tmpfs:                                          # optional: if you have a Syno with enough RAM, you can uncomment this line to enable transcoding in RAM. uncomment this line.
#      - /transcode                                  # optional: if you have a Syno with enough RAM, you can uncomment this line to enable transcoding in RAM. uncomment this line.

  soularr:
    <<: *default-app
    container_name: soularr
    hostname: soularr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      #Script interval in seconds
      - SCRIPT_INTERVAL=300
    user: ${PUID}:${PGID}
    volumes:
      #"You can set /downloads to whatever you want but will then need to change the Slskd download dir in your config file"
      - ${DOCKERDATADIR}/slskd/downloads:/downloads
      #Select where you are storing your config file. 
      #Leave "/data" since thats where the script expects the config file to be
      - ${DOCKERCONFDIR}/soularr:/data
    image: mrusse08/soularr:latest